/*=============================================================================
 LivRDGSegmentPS.usf: Masks foreground using depth comparison
 between foreground and background. Mask also written to alpha.  Also copies background.
 =============================================================================*/


#include "/Engine/Public/Platform.ush"
#include "/Engine/Private/Common.ush"
#include "/Engine/Private/SceneTexturesCommon.ush"
#include "/Engine/Generated/GeneratedUniformBuffers.ush" 
#include "/Engine/Private/SceneTextureParameters.ush"
#include "/Engine/Private/DeferredShadingCommon.ush"        // GetGBufferData()
#include "/Engine/Private/TonemapCommon.ush"

/* Declaration of all variables
=============================================================================*/
Texture2D InputBackgroundTexture;
SamplerState InputBackgroundSampler;

Texture2D InputBackgroundDepthTexture;
SamplerState InputBackgroundDepthSampler;

#if POSTPROCESSING == 1
Texture2D InputTexture;
SamplerState InputSampler;
#endif

/* Pixel shader
=============================================================================*/

void MainPS(noperspective float4 UVAndScreenPos : TEXCOORD0,
	in float4 SVPos : SV_POSITION,
	out float4 OutForeground : SV_Target0,
	out float4 OutBackground : SV_Target1)
{
	float2 UV = UVAndScreenPos.xy;

	float2 ScreenUV = SvPositionToBufferUV(SVPos);
	//float4 ForegroundSceneColorDepth = CalcSceneColorAndDepth(UVAndScreenPos.zw);
	float4 ForegroundSceneColorDepth = CalcSceneColorAndDepth(ScreenUV);

#if POSTPROCESSING == 1
	float4 InputBackgroundColor = InputTexture.Sample(InputSampler, ScreenUV);// * float4(1.0, 0.5, 0.5, 1.0);
#else
	float4 InputBackgroundColor = InputBackgroundTexture.Sample(InputBackgroundSampler, ScreenUV);
#endif

	float BackgroundDepth = InputBackgroundDepthTexture.Sample(InputBackgroundDepthSampler, ScreenUV).r;
    //float ForegroundDepth = InputForegroundDepthTexture.Sample(InputForegroundDepthSampler, UV.xy).r;
	float ForegroundDepth = ForegroundSceneColorDepth.a;
	    
    float Mask = 1 - saturate(BackgroundDepth - ForegroundDepth);

    OutForeground = float4(InputBackgroundColor.rgb * ceil(Mask), Mask);
	OutBackground = InputBackgroundColor;
	
	OutForeground.rgb = LinearToSrgb(OutForeground.rgb);
	OutBackground.rgb = LinearToSrgb(OutBackground.rgb);
}


